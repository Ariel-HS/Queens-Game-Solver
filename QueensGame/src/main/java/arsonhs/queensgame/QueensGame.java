/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package arsonhs.queensgame;

import java.awt.*;
import java.io.File;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ariel
 */
public class QueensGame extends javax.swing.JFrame {
    // variable declaration for non-gui
    private String[][] board;
    private String pieceOption = "queen";
    private String algorithmOption;
    
    /**
     * Creates new form QueensGame
     */
    public QueensGame() {        
        initComponents();
        initButtonGroup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pieceButtonGroup = new javax.swing.ButtonGroup();
        titleLabel = new javax.swing.JLabel();
        piecePanel = new javax.swing.JPanel();
        queenRadioButton = new javax.swing.JRadioButton();
        rookRadioButton = new javax.swing.JRadioButton();
        bishopRadioButton = new javax.swing.JRadioButton();
        knightRadioButton = new javax.swing.JRadioButton();
        solvePanel = new javax.swing.JPanel();
        backtrackRadioButton = new javax.swing.JRadioButton();
        loadButton = new javax.swing.JButton();
        boardPanel = new javax.swing.JPanel();
        placeholderPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        titleLabel.setText("QUEENS GAME");

        queenRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        queenRadioButton.setSelected(true);
        queenRadioButton.setText("Queen");
        queenRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queenRadioButtonActionPerformed(evt);
            }
        });

        rookRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rookRadioButton.setText("Rook");
        rookRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rookRadioButtonActionPerformed(evt);
            }
        });

        bishopRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bishopRadioButton.setText("Bishop");
        bishopRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bishopRadioButtonActionPerformed(evt);
            }
        });

        knightRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        knightRadioButton.setText("Knight");
        knightRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knightRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout piecePanelLayout = new javax.swing.GroupLayout(piecePanel);
        piecePanel.setLayout(piecePanelLayout);
        piecePanelLayout.setHorizontalGroup(
            piecePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(piecePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(piecePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queenRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(rookRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(bishopRadioButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(knightRadioButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                .addContainerGap())
        );
        piecePanelLayout.setVerticalGroup(
            piecePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(piecePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(queenRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rookRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bishopRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(knightRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(317, Short.MAX_VALUE))
        );

        backtrackRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        backtrackRadioButton.setText("Backtrack");
        backtrackRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtrackRadioButtonActionPerformed(evt);
            }
        });

        loadButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout solvePanelLayout = new javax.swing.GroupLayout(solvePanel);
        solvePanel.setLayout(solvePanelLayout);
        solvePanelLayout.setHorizontalGroup(
            solvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solvePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backtrackRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(loadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        solvePanelLayout.setVerticalGroup(
            solvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solvePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backtrackRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(418, Short.MAX_VALUE))
        );

        boardPanel.setBackground(new java.awt.Color(0, 0, 0));
        boardPanel.setMinimumSize(new java.awt.Dimension(522, 451));
        boardPanel.setPreferredSize(new java.awt.Dimension(522, 451));

        placeholderPanel.setBackground(new java.awt.Color(0, 0, 255));
        placeholderPanel.setMinimumSize(new java.awt.Dimension(522, 451));
        placeholderPanel.setPreferredSize(new java.awt.Dimension(522, 451));

        javax.swing.GroupLayout placeholderPanelLayout = new javax.swing.GroupLayout(placeholderPanel);
        placeholderPanel.setLayout(placeholderPanelLayout);
        placeholderPanelLayout.setHorizontalGroup(
            placeholderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 522, Short.MAX_VALUE)
        );
        placeholderPanelLayout.setVerticalGroup(
            placeholderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(placeholderPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boardPanelLayout.createSequentialGroup()
                .addComponent(placeholderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(piecePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solvePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(271, 271, 271))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(piecePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(solvePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 58, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queenRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queenRadioButtonActionPerformed
        pieceOption = "queen";
    }//GEN-LAST:event_queenRadioButtonActionPerformed

    private void backtrackRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtrackRadioButtonActionPerformed
        algorithmOption = "backtrack";
    }//GEN-LAST:event_backtrackRadioButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Txt files", "txt");
            
            fileChooser.setFileFilter(filter);
            fileChooser.setCurrentDirectory(new File("../"));
            int result = fileChooser.showOpenDialog(null);
            
            if (result != JFileChooser.APPROVE_OPTION) {
                return;
            } 
            
            File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
//            System.out.println(file.getPath());
            
            // assume format is correct
            Scanner scanner = new Scanner(file);
            String[] dimension = scanner.nextLine().split("\\s+");
            int nRows = Integer.parseInt(dimension[0]);
            int nCols = Integer.parseInt(dimension[1]);
            int nRegions = Integer.parseInt(scanner.nextLine());
            
            String[][] boardTemp = new String[nRows][nCols];
            for (int i=0;i<nRows;i++) {
                boardTemp[i] = scanner.nextLine().split("\\s+");
//                System.out.println(Arrays.toString(boardTemp[i]));
            }
            
            scanner.close();
            
            // initialize colorList for board (max of 9 colors/region)
            Color[] colorList = {Color.blue, Color.red, Color.cyan, Color.gray, Color.green, Color.magenta, Color.orange, Color.pink, Color.yellow};
            // initialize hashmap for color
            HashMap<String, Color> colorMap = new HashMap<>();
            int ctrRegs = 0;
            for (int i=0;i<nRows;i++) {
                for (int j=0;j<nCols;j++) {
                    String symbol = boardTemp[i][j];
                    Color curColor = colorMap.get(symbol);
                    if (curColor == null) {
                        if (ctrRegs > colorList.length) {
                            JOptionPane.showMessageDialog(this, "Too many regions!");
                            return;
                        }
                        curColor = colorList[ctrRegs];
                        colorMap.put(symbol, curColor);
                        ctrRegs++;
                    }
                }
            }
            this.board = boardTemp;
            Pair<Boolean,Integer[]> resultSolve = Backtrack.solve(pieceOption, board, nRows, nCols);
            
            drawBoard(pieceOption, resultSolve.getValue(), nCols, nRows, colorMap);
            
            if (resultSolve.getKey() == false) {
                JOptionPane.showMessageDialog(this, "No Solution!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_loadButtonActionPerformed

    private void rookRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rookRadioButtonActionPerformed
        pieceOption = "rook";
    }//GEN-LAST:event_rookRadioButtonActionPerformed

    private void bishopRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bishopRadioButtonActionPerformed
        pieceOption = "bishop";
    }//GEN-LAST:event_bishopRadioButtonActionPerformed

    private void knightRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knightRadioButtonActionPerformed
        pieceOption = "knight";
    }//GEN-LAST:event_knightRadioButtonActionPerformed

    private void drawBoard(String piece, Integer[] pieceLocation, Integer nCols, Integer nRows, HashMap<String, Color> colorMap) {
        this.boardPanel.remove(this.placeholderPanel);
            this.placeholderPanel = new javax.swing.JPanel() { 
                ImageIcon pieceImage = determineImage(piece);
                
                @Override
                public void paint(Graphics g) {
                    int xMult = 522/nCols;
                    int yMult = 451/nRows;
                    for (int y=0;y<nRows;y++){
                        for (int x=0;x<nCols;x++) {
                            String symbol = board[y][x];
                            Color curColor = colorMap.get(symbol);
                            g.setColor(curColor);
                            
                            Integer xCoor = x*xMult+2;
                            Integer yCoor = y*yMult+2;
                            Integer width = xMult-2;
                            Integer height = yMult-2;
                            g.fillRect(xCoor,yCoor,width,height);
                            
                            if (x == pieceLocation[y]) {
                                g.drawImage(pieceImage.getImage(), xCoor, yCoor, width, height, null);
                            }
                        }
                    }
                }
            };
            javax.swing.GroupLayout placeholderPanelLayout = new javax.swing.GroupLayout(placeholderPanel);
            placeholderPanel.setLayout(placeholderPanelLayout);
            placeholderPanelLayout.setHorizontalGroup(
                placeholderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 522, Short.MAX_VALUE)
            );
            placeholderPanelLayout.setVerticalGroup(
                placeholderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
            boardPanel.setLayout(boardPanelLayout);
            boardPanelLayout.setHorizontalGroup(
                boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(placeholderPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            boardPanelLayout.setVerticalGroup(
                boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(placeholderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
    }
    
    private ImageIcon determineImage(String piece) {
        return switch (piece) {
            case "rook" -> new ImageIcon("assets/rook.png");
            case "bishop" -> new ImageIcon("assets/bishop.png");
            case "knight" -> new ImageIcon("assets/knight.png");
            default -> new ImageIcon("assets/queen.png");
        }; // piece == queen
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueensGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueensGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueensGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueensGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueensGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton backtrackRadioButton;
    private javax.swing.JRadioButton bishopRadioButton;
    private javax.swing.JPanel boardPanel;
    private javax.swing.JRadioButton knightRadioButton;
    private javax.swing.JButton loadButton;
    private javax.swing.ButtonGroup pieceButtonGroup;
    private javax.swing.JPanel piecePanel;
    private javax.swing.JPanel placeholderPanel;
    private javax.swing.JRadioButton queenRadioButton;
    private javax.swing.JRadioButton rookRadioButton;
    private javax.swing.JPanel solvePanel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private void initButtonGroup() {
        pieceButtonGroup.add(queenRadioButton);
        pieceButtonGroup.add(rookRadioButton);
        pieceButtonGroup.add(bishopRadioButton);
        pieceButtonGroup.add(knightRadioButton);
    }
}
